<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- SQL Mapping -->
<mapper namespace="com.ai.admin.dao.AnalyzeInfoMapper">
	<!-- 분석정보 리스트 조회 -->
	<select id="selectAnalyzeInfoList" parameterType="com.ai.admin.vo.AnalyzeInfoSearchVo" resultType="com.ai.admin.vo.AnalyzeInfoVo">
		SELECT CA.USER_ID
			 , CA.ANALYZE_INFO_ID
			 , CA.FST_CRER_ID
			 , IFNULL((SELECT USER_NM FROM CU_USER WHERE USER_ID = CA.FST_CRER_ID), CA.FST_CRER_ID) AS FST_CRER_NM
			 , DATE_FORMAT(CA.FST_CRE_DTM, '%Y.%m.%d') AS FST_CRE_DTM
			 , CA.AUDIT_ID
			 , IFNULL((SELECT USER_NM FROM CU_USER WHERE USER_ID = CA.AUDIT_ID), CA.AUDIT_ID) AS AUDIT_NM
			 , DATE_FORMAT(CA.AUDIT_DTM, '%Y.%m.%d') AS AUDIT_DTM
			 , CA.BADUK_TENDENCY
			 , CA.VICTORY_PATTERN
			 , CA.BP
			 , CA.IBM
			 , CA.TARGET
			 , CA.OPENING
			 , CA.OPENING_STARTING
			 , CA.OPENING_AI_MATCH_RATE
			 , CA.OPENING_AI_GRAPH
			 , CA.OPENING_MISS_RATE
			 , CA.MIDDLE_GAME
			 , CA.MIDDLE_GAME_COMBATIVE_POWER
			 , CA.MIDDLE_GAME_SAVE_RATE
			 , CA.MIDDLE_GAME_MISS_CNT
			 , CA.MIDDLE_GAME_MISS_RATE
			 , CA.END_GAME
			 , CA.END_GAME_DEFENSE
			 , CA.END_GAME_DEFENSE_FAILURE
			 , CA.END_GAME_TURN_THE_TABLES
			 , CA.END_GAME_MISS_CNT
			 , CA.GAME_TIMING
			 , CA.GAME_TIMING_WAVE
			 , CA.GAME_TIMING_DEFENCE
			 , CA.TECHNIQUE
			 , CA.TECHNIQUE_VALUE_JUDGMENT
			 , CA.TECHNIQUE_HAENGMA
			 , CA.TECHNIQUE_READING
			 , CA.EXAM_OPENING_POSITIONAL_JUDGMENT
			 , CA.EXAM_HAENGMA_VALUE_JUDGMENT
			 , CA.EXAM_READING_LIFE_AND_DEATH
			 , CA.EXAM_END_GAME_COUNTING
			 , CA.ETC
		  FROM CU_ANALYZE_INFO CA
		 WHERE 1 = 1
		   <if test='@org.apache.commons.lang3.StringUtils@isNotEmpty(searchValue)'>
			   <if test='@org.apache.commons.lang3.StringUtils@equals(searchKey, "userId")'>
				   AND CA.USER_ID LIKE CONCAT('%', #{searchValue}, '%')
			   </if>
			   <if test='@org.apache.commons.lang3.StringUtils@equals(searchKey, "analyzeInfoId")'>
				   AND CA.ANALYZE_INFO_ID LIKE CONCAT('%', #{searchValue}, '%')
			   </if>
		   </if>
		 ORDER BY CA.FST_CRE_DTM DESC
	</select>

	<!-- 분석정보 상세 조회 -->
	<select id="selectAnalyzeInfoOne" parameterType="com.ai.admin.vo.AnalyzeInfoVo" resultType="com.ai.admin.vo.AnalyzeInfoVo">
		SELECT CA.USER_ID
			 , CA.ANALYZE_INFO_ID
			 , CA.FST_CRER_ID
			 , IFNULL((SELECT USER_NM FROM CU_USER WHERE USER_ID = CA.FST_CRER_ID), CA.FST_CRER_ID) AS FST_CRER_NM
			 , DATE_FORMAT(CA.FST_CRE_DTM, '%Y-%m-%d %h:%i') AS FST_CRE_DTM
			 , CA.AUDIT_ID
			 , IFNULL((SELECT USER_NM FROM CU_USER WHERE USER_ID = CA.AUDIT_ID), CA.AUDIT_ID) AS AUDIT_NM
			 , DATE_FORMAT(CA.AUDIT_DTM, '%Y-%m-%d %h:%i') AS AUDIT_DTM
			 , CA.BADUK_TENDENCY
			 , CA.VICTORY_PATTERN
			 , CA.BP
			 , CA.IBM
			 , CA.TARGET
			 , CA.OPENING
			 , CA.OPENING_STARTING
			 , CA.OPENING_AI_MATCH_RATE
			 , CA.OPENING_AI_GRAPH
			 , CA.OPENING_MISS_RATE
			 , CA.MIDDLE_GAME
			 , CA.MIDDLE_GAME_COMBATIVE_POWER
			 , CA.MIDDLE_GAME_SAVE_RATE
			 , CA.MIDDLE_GAME_MISS_CNT
			 , CA.MIDDLE_GAME_MISS_RATE
			 , CA.END_GAME
			 , CA.END_GAME_DEFENSE
			 , CA.END_GAME_DEFENSE_FAILURE
			 , CA.END_GAME_TURN_THE_TABLES
			 , CA.END_GAME_MISS_CNT
			 , CA.GAME_TIMING
			 , CA.GAME_TIMING_WAVE
			 , CA.GAME_TIMING_DEFENCE
			 , CA.TECHNIQUE
			 , CA.TECHNIQUE_VALUE_JUDGMENT
			 , CA.TECHNIQUE_HAENGMA
			 , CA.TECHNIQUE_READING
			 , CA.EXAM_OPENING_POSITIONAL_JUDGMENT
			 , CA.EXAM_HAENGMA_VALUE_JUDGMENT
			 , CA.EXAM_READING_LIFE_AND_DEATH
			 , CA.EXAM_END_GAME_COUNTING
			 , CA.EXAM_OPENING_POSITIONAL_JUDGMENT + CA.EXAM_HAENGMA_VALUE_JUDGMENT + CA.EXAM_READING_LIFE_AND_DEATH + CA.EXAM_END_GAME_COUNTING AS EXAM_TOTAL
			 , ROUND((IFNULL(CA.OPENING, 0) + IFNULL(CA.MIDDLE_GAME, 0) + IFNULL(CA.END_GAME, 0) + IFNULL(CA.TECHNIQUE, 0)) / 5) AS ALL_TOTAL
			 , CA.ETC
			 , CU.USER_GRADE
			 , CU.USER_NM
			 , F_GET_CODE_NAME('CU003', CU.LEVEL) AS LEVEL_NM
		     , ROUND((TO_DAYS(NOW()) - (TO_DAYS(CU.BIRTH))) / 365) AS AGE
			 , CU.TEAM
		  FROM CU_ANALYZE_INFO CA
		     , CU_USER CU
	     WHERE 1 = 1
	       AND CA.USER_ID = CU.USER_ID
	       AND CA.USER_ID = #{userId}
	       AND CA.ANALYZE_INFO_ID = #{analyzeInfoId}
	</select>

	<!-- 분석정보 merge -->
	<insert id="mergeAnalyzeInfo" parameterType="com.ai.admin.vo.AnalyzeInfoVo">
		INSERT INTO CU_ANALYZE_INFO (
			USER_ID
			, ANALYZE_INFO_ID
			, FST_CRER_ID
			, FST_CRE_DTM
			, AUDIT_ID
			, AUDIT_DTM
			, BADUK_TENDENCY
			, VICTORY_PATTERN
			, BP
			, IBM
			, TARGET
			, OPENING
			, OPENING_STARTING
			, OPENING_AI_MATCH_RATE
			, OPENING_AI_GRAPH
			, OPENING_MISS_RATE
			, MIDDLE_GAME
			, MIDDLE_GAME_COMBATIVE_POWER
			, MIDDLE_GAME_SAVE_RATE
			, MIDDLE_GAME_MISS_CNT
			, MIDDLE_GAME_MISS_RATE
			, END_GAME
			, END_GAME_DEFENSE
			, END_GAME_DEFENSE_FAILURE
			, END_GAME_TURN_THE_TABLES
			, END_GAME_MISS_CNT
			, GAME_TIMING
			, GAME_TIMING_WAVE
			, GAME_TIMING_DEFENCE
			, TECHNIQUE
			, TECHNIQUE_VALUE_JUDGMENT
			, TECHNIQUE_HAENGMA
			, TECHNIQUE_READING
			, EXAM_OPENING_POSITIONAL_JUDGMENT
			, EXAM_HAENGMA_VALUE_JUDGMENT
			, EXAM_READING_LIFE_AND_DEATH
			, EXAM_END_GAME_COUNTING
			, ETC
		)
		VALUES (
			#{userId}
			, #{analyzeInfoId}
			, #{ssLoginId}
			, NOW()
			, #{ssLoginId}
			, NOW()
			, #{badukTendency}
			, #{victoryPattern}
			, #{bp}
			, #{ibm}
			, #{target}
			, IF(#{opening} = '', NULL, #{opening})
			, #{openingStarting}
			, #{openingAiMatchRate}
			, #{openingAiGraph}
			, #{openingMissRate}
			, IF(#{middleGame} = '', NULL, #{middleGame})
			, #{middleGameCombativePower}
			, #{middleGameSaveRate}
			, #{middleGameMissCnt}
			, #{middleGameMissRate}
			, IF(#{endGame} = '', NULL, #{endGame})
			, #{endGameDefense}
			, #{endGameDefenseFailure}
			, #{endGameTurnTheTables}
			, #{endGameMissCnt}
			, IF(#{gameTiming} = '', NULL, #{gameTiming})
			, #{gameTimingWave}
			, #{gameTimingDefence}
			, IF(#{technique} = '', NULL, #{technique})
			, IF(#{techniqueValueJudgment} = '', NULL, #{techniqueValueJudgment})
			, IF(#{techniqueHaengma} = '', NULL, #{techniqueHaengma})
			, IF(#{techniqueReading} = '', NULL, #{techniqueReading})
			, IF(#{examOpeningPositionalJudgment} = '', NULL, #{examOpeningPositionalJudgment})
			, IF(#{examHaengmaValueJudgment} = '', NULL, #{examHaengmaValueJudgment})
			, IF(#{examReadingLifeAndDeath} = '', NULL, #{examReadingLifeAndDeath})
			, IF(#{examEndGameCounting} = '', NULL, #{examEndGameCounting})
			, #{etc}
		)
		ON DUPLICATE KEY UPDATE
		USER_ID = #{userId}
		, ANALYZE_INFO_ID = #{analyzeInfoId}
		, AUDIT_ID = #{ssLoginId}
		, AUDIT_DTM = NOW()
		, BADUK_TENDENCY = #{badukTendency}
		, VICTORY_PATTERN = #{victoryPattern}
		, BP = #{bp}
		, IBM = #{ibm}
		, TARGET = #{target}
		, OPENING = IF(#{opening} = '', NULL, #{opening})
		, OPENING_STARTING = #{openingStarting}
		, OPENING_AI_MATCH_RATE = #{openingAiMatchRate}
		, OPENING_AI_GRAPH = #{openingAiGraph}
		, OPENING_MISS_RATE = #{openingMissRate}
		, MIDDLE_GAME = IF(#{middleGame} = '', NULL, #{middleGame})
		, MIDDLE_GAME_COMBATIVE_POWER = #{middleGameCombativePower}
		, MIDDLE_GAME_SAVE_RATE = #{middleGameSaveRate}
		, MIDDLE_GAME_MISS_CNT = #{middleGameMissCnt}
		, MIDDLE_GAME_MISS_RATE = #{middleGameMissRate}
		, END_GAME = IF(#{endGame} = '', NULL, #{endGame})
		, END_GAME_DEFENSE = #{endGameDefense}
		, END_GAME_DEFENSE_FAILURE = #{endGameDefenseFailure}
		, END_GAME_TURN_THE_TABLES = #{endGameTurnTheTables}
		, END_GAME_MISS_CNT = #{endGameMissCnt}
		, GAME_TIMING = IF(#{gameTiming} = '', NULL, #{gameTiming})
		, GAME_TIMING_WAVE = #{gameTimingWave}
		, GAME_TIMING_DEFENCE = #{gameTimingDefence}
		, TECHNIQUE = IF(#{technique} = '', NULL, #{technique})
		, TECHNIQUE_VALUE_JUDGMENT = IF(#{techniqueValueJudgment} = '', NULL, #{techniqueValueJudgment})
		, TECHNIQUE_HAENGMA = IF(#{techniqueHaengma} = '', NULL, #{techniqueHaengma})
		, TECHNIQUE_READING = IF(#{techniqueReading} = '', NULL, #{techniqueReading})
		, EXAM_OPENING_POSITIONAL_JUDGMENT = IF(#{examOpeningPositionalJudgment} = '', NULL, #{examOpeningPositionalJudgment})
		, EXAM_HAENGMA_VALUE_JUDGMENT = IF(#{examHaengmaValueJudgment} = '', NULL, #{examHaengmaValueJudgment})
		, EXAM_READING_LIFE_AND_DEATH = IF(#{examReadingLifeAndDeath} = '', NULL, #{examReadingLifeAndDeath})
		, EXAM_END_GAME_COUNTING = IF(#{examEndGameCounting} = '', NULL, #{examEndGameCounting})
		, ETC = #{etc}
	</insert>

	<!-- 분석정보 삭제 -->
	<delete id="deleteAnalyzeInfo" parameterType="com.ai.admin.vo.AnalyzeInfoVo">
		DELETE FROM CU_ANALYZE_INFO
		 WHERE USER_ID = #{userId}
		   AND ANALYZE_INFO_ID = #{analyzeInfoId}
	</delete>

	<!-- 분석정보 > 사용자 리스트 조회 -->
	<select id="selectUserList" parameterType="java.lang.String" resultType="com.ai.admin.vo.UserVo">
		 SELECT CU.USER_ID
			  , CU.USER_NM
			  , CU.USER_NICK_NM
			  , CU.USER_GRADE
              , CU.LEVEL
              , F_GET_CODE_NAME('CU003', CU.LEVEL) AS LEVEL_NM
		      , CU.BIRTH
		      , ROUND((TO_DAYS(NOW()) - (TO_DAYS(CU.BIRTH))) / 365) AS AGE
		      , CU.TEAM
		   FROM CU_USER CU
		  WHERE 1 = 1
		    AND CU.DEL_YN = 'N'
		    AND ((CU.USER_ID LIKE CONCAT('%', #{keyword}, '%')) OR (CU.USER_NICK_NM LIKE CONCAT('%', #{keyword}, '%')))
		  ORDER BY USER_ID DESC
	</select>

	<!-- 분석정보 > 통계 조회 -->
	<select id="selectStatisicsList" parameterType="java.lang.String" resultType="com.ai.admin.vo.AnalyzeInfoVo">
		SELECT CU.USER_ID
			 , CU.USER_GRADE
			 , CU.USER_NICK_NM
			 , CU.USER_NM
			 , F_GET_CODE_NAME('CU003', CU.LEVEL) AS LEVEL_NM
		     , ROUND((TO_DAYS(NOW()) - (TO_DAYS(CU.BIRTH))) / 365) AS AGE
			 , CU.TEAM
			 <if test='@org.apache.commons.lang3.StringUtils@equals(value, "age")'>
				 , ROUND(AVG(CA.OPENING)) AS OPENING
				 , ROUND(AVG(CA.MIDDLE_GAME)) AS MIDDLE_GAME
				 , ROUND(AVG(CA.END_GAME)) AS END_GAME
				 , ROUND(AVG(CA.GAME_TIMING)) AS GAME_TIMING
				 , ROUND(AVG(CA.TECHNIQUE)) AS TECHNIQUE
				 , ROUND(AVG(CA.TECHNIQUE_VALUE_JUDGMENT)) AS TECHNIQUE_VALUE_JUDGMENT
				 , ROUND(AVG(CA.TECHNIQUE_HAENGMA)) AS TECHNIQUE_HAENGMA
				 , ROUND(AVG(CA.TECHNIQUE_READING)) AS TECHNIQUE_READING
				 , ROUND(AVG(CA.EXAM_OPENING_POSITIONAL_JUDGMENT)) AS EXAM_OPENING_POSITIONAL_JUDGMENT
				 , ROUND(AVG(CA.EXAM_HAENGMA_VALUE_JUDGMENT)) AS EXAM_HAENGMA_VALUE_JUDGMENT
				 , ROUND(AVG(CA.EXAM_READING_LIFE_AND_DEATH)) AS EXAM_READING_LIFE_AND_DEATH
				 , ROUND(AVG(CA.EXAM_END_GAME_COUNTING)) AS EXAM_END_GAME_COUNTING
				 , ROUND(AVG(CA.EXAM_OPENING_POSITIONAL_JUDGMENT) +
				 		 AVG(CA.EXAM_HAENGMA_VALUE_JUDGMENT) +
				 		 AVG(CA.EXAM_READING_LIFE_AND_DEATH) +
				 		 AVG(CA.EXAM_END_GAME_COUNTING)) AS EXAM_TOTAL
			 </if>
			 <if test='@org.apache.commons.lang3.StringUtils@equals(value, "max") or @org.apache.commons.lang3.StringUtils@equals(value, "min")'>
			 	 , CA.ANALYZE_INFO_ID
				 , CA.BADUK_TENDENCY
				 , CA.VICTORY_PATTERN
				 , CA.BP
				 , CA.IBM
				 , CA.TARGET
				 , CA.OPENING
				 , CA.OPENING_STARTING
				 , CA.OPENING_AI_MATCH_RATE
				 , CA.OPENING_AI_GRAPH
				 , CA.OPENING_MISS_RATE
				 , CA.MIDDLE_GAME
				 , CA.MIDDLE_GAME_COMBATIVE_POWER
				 , CA.MIDDLE_GAME_SAVE_RATE
				 , CA.MIDDLE_GAME_MISS_CNT
				 , CA.MIDDLE_GAME_MISS_RATE
				 , CA.END_GAME
				 , CA.END_GAME_DEFENSE
				 , CA.END_GAME_DEFENSE_FAILURE
				 , CA.END_GAME_TURN_THE_TABLES
				 , CA.END_GAME_MISS_CNT
				 , CA.GAME_TIMING
				 , CA.GAME_TIMING_WAVE
				 , CA.GAME_TIMING_DEFENCE
				 , CA.TECHNIQUE
				 , CA.TECHNIQUE_VALUE_JUDGMENT
				 , CA.TECHNIQUE_HAENGMA
				 , CA.TECHNIQUE_READING
				 , CA.EXAM_OPENING_POSITIONAL_JUDGMENT
				 , CA.EXAM_HAENGMA_VALUE_JUDGMENT
				 , CA.EXAM_READING_LIFE_AND_DEATH
				 , CA.EXAM_END_GAME_COUNTING
				 , CA.EXAM_OPENING_POSITIONAL_JUDGMENT + CA.EXAM_HAENGMA_VALUE_JUDGMENT + CA.EXAM_READING_LIFE_AND_DEATH + CA.EXAM_END_GAME_COUNTING AS EXAM_TOTAL
				 , ROUND((IFNULL(CA.OPENING, 0) + IFNULL(CA.MIDDLE_GAME, 0) + IFNULL(CA.END_GAME, 0) + IFNULL(CA.TECHNIQUE, 0)) / 5) AS ALL_TOTAL
				 , CA.ETC
			 </if>
		  FROM CU_ANALYZE_INFO CA
		     , CU_USER CU
	     WHERE 1 = 1
	       AND CA.USER_ID = CU.USER_ID
	       AND ((CU.USER_ID LIKE CONCAT('%', #{keyword}, '%')) OR (CU.USER_NICK_NM LIKE CONCAT('%', #{keyword}, '%')))
	       AND CA.ANALYZE_INFO_ID BETWEEN #{from} AND #{to}
	       <if test='@org.apache.commons.lang3.StringUtils@equals(value, "max")'>
			   AND CA.OPENING + CA.MIDDLE_GAME + CA.END_GAME + CA.GAME_TIMING + CA.TECHNIQUE = (
			   		SELECT MAX(A.OPENING + A.MIDDLE_GAME + A.END_GAME + A.GAME_TIMING + A.TECHNIQUE)
			   		  FROM CU_ANALYZE_INFO A
			   		     , CU_USER B
			   		 WHERE A.USER_ID = B.USER_ID
			   		   AND ((B.USER_ID LIKE CONCAT('%', #{keyword}, '%')) OR (B.USER_NICK_NM LIKE CONCAT('%', #{keyword}, '%')))
			   		   AND ANALYZE_INFO_ID BETWEEN #{from} AND #{to}
			   )
		   </if>
		   <if test='@org.apache.commons.lang3.StringUtils@equals(value, "min")'>
			   AND CA.OPENING + CA.MIDDLE_GAME + CA.END_GAME + CA.GAME_TIMING + CA.TECHNIQUE = (
			   		SELECT MIN(A.OPENING + A.MIDDLE_GAME + A.END_GAME + A.GAME_TIMING + A.TECHNIQUE)
			   		  FROM CU_ANALYZE_INFO A
			   		     , CU_USER B
			   		 WHERE A.USER_ID = B.USER_ID
			   		   AND ((B.USER_ID LIKE CONCAT('%', #{keyword}, '%')) OR (B.USER_NICK_NM LIKE CONCAT('%', #{keyword}, '%')))
			   		   AND ANALYZE_INFO_ID BETWEEN #{from} AND #{to}
			   )
		   </if>
	</select>

</mapper>